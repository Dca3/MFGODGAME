version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: mmrpg-postgres
    environment:
      POSTGRES_DB: mmrpg
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: mmrpg-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mmrpg-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Default: Host=postgres;Database=mmrpg;Username=postgres;Password=postgres
      Redis__ConnectionString: redis:6379
      Jwt__Key: dev_super_secret_change_me_in_production_use_strong_key_at_least_256_bits
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./Redis:/app/Redis

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mmrpg-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mafya.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mmrpg-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis

volumes:
  postgres_data:
